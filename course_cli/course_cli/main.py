"""
–û—Å–Ω–æ–≤–Ω–æ–π CLI –º–æ–¥—É–ª—å –¥–ª—è –∫—É—Ä—Å–∞ ¬´–°–∏—Å—Ç–µ–º–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞¬ª.

–ö–æ–º–∞–Ω–¥—ã:
- course start-week <N> ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ø–æ –Ω–µ–¥–µ–ª–µ N
- course contract init ‚Äî —Å–æ–∑–¥–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
- course contract update ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç
- course progress ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
- course template <name> ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞
"""

import sys
import os
import subprocess
from pathlib import Path
from typing import Optional
from datetime import datetime
import shutil

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == "win32":
    if hasattr(sys.stdin, 'reconfigure'):
        sys.stdin.reconfigure(encoding='utf-8')
    if hasattr(sys.stdout, 'reconfigure'):
        sys.stdout.reconfigure(encoding='utf-8')
    if hasattr(sys.stderr, 'reconfigure'):
        sys.stderr.reconfigure(encoding='utf-8')
    os.environ['PYTHONIOENCODING'] = 'utf-8'

import typer
from rich.console import Console
from rich.table import Table
from rich.panel import Panel
from rich.markdown import Markdown

app = typer.Typer(
    name="course",
    help="CLI –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É—Ä—Å–æ–º ¬´–°–∏—Å—Ç–µ–º–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞¬ª",
    add_completion=False
)

console = Console(
    force_terminal=True,
    legacy_windows=False,
    force_interactive=False
) if sys.platform == "win32" else Console()

# –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è)
def get_project_root() -> Path:
    """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞."""
    # –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Ñ–∞–π–ª
    current = Path(__file__).parent.parent.parent  # course_cli/course_cli/main.py -> –∫–æ—Ä–µ–Ω—å
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    if (current / "weeks").exists() and (current / "templates").exists():
        return current
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç —Ñ–∞–π–ª–∞, –∏—â–µ–º –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤–≤–µ—Ä—Ö
    current = Path.cwd()
    for parent in [current] + list(current.parents):
        if (parent / "weeks").exists() and (parent / "templates").exists():
            return parent
    
    # –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    return Path.cwd()

PROJECT_ROOT = get_project_root()
WEEKS_DIR = PROJECT_ROOT / "weeks"
TEMPLATES_DIR = PROJECT_ROOT / "templates"
CONTRACTS_DIR = PROJECT_ROOT / "personal_contracts"


@app.command(name="start-week")
def start_week(
    week: int = typer.Argument(..., help="–ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ (1-8)"),
    open_file: bool = typer.Option(True, "--open/--no-open", help="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –Ω–µ–¥–µ–ª–∏"),
    show_summary: bool = typer.Option(True, "--summary/--no-summary", help="–ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"),
):
    """
    –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ø–æ –Ω–µ–¥–µ–ª–µ N.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
    - –¶–µ–ª–∏ –Ω–µ–¥–µ–ª–∏
    - –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ü–µ–ø—Ç
    - –ü—Ä–∞–∫—Ç–∏–∫—É
    - –†–∞–±–æ—á–∏–π –ø—Ä–æ–¥—É–∫—Ç
    - –°—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    """
    if week < 1 or week > 8:
        console.print(f"[red]‚ùå –ù–µ–¥–µ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 8[/red]")
        raise typer.Exit(code=1)
    
    # –ò—â–µ–º —Ñ–∞–π–ª –Ω–µ–¥–µ–ª–∏
    week_files = list(WEEKS_DIR.glob(f"Week_0{week}_*.md"))
    
    if not week_files:
        console.print(f"[red]‚ùå –§–∞–π–ª –¥–ª—è –Ω–µ–¥–µ–ª–∏ {week} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {WEEKS_DIR}[/red]")
        raise typer.Exit(code=1)
    
    week_file = week_files[0]
    
    console.print(f"\n[bold cyan]üéØ –ù–µ–¥–µ–ª—è {week}: {week_file.stem.split('_', 2)[2]}[/bold cyan]\n")
    
    if show_summary:
        try:
            content = week_file.read_text(encoding="utf-8")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
            lines = content.split('\n')
            
            # –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
            summary = []
            in_goals = False
            in_concept = False
            
            for i, line in enumerate(lines[:100]):  # –ü–µ—Ä–≤—ã–µ 100 —Å—Ç—Ä–æ–∫
                if line.startswith("## –¶–µ–ª–∏ –Ω–µ–¥–µ–ª–∏") or line.startswith("## Learning Outcomes"):
                    in_goals = True
                    continue
                elif line.startswith("## –ö–æ–Ω—Ü–µ–ø—Ç –Ω–µ–¥–µ–ª–∏") or line.startswith("## –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ü–µ–ø—Ç"):
                    in_concept = True
                    continue
                elif line.startswith("##") and (in_goals or in_concept):
                    break
                
                if in_goals or in_concept:
                    if line.strip() and not line.startswith("#"):
                        summary.append(line)
            
            if summary:
                summary_text = "\n".join(summary[:10])  # –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
                console.print(Panel(summary_text, title="üìã –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", border_style="cyan"))
            
        except Exception as e:
            console.print(f"[yellow]‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª: {e}[/yellow]")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
    console.print(f"\n[dim]üìÑ –§–∞–π–ª: {week_file.relative_to(PROJECT_ROOT)}[/dim]")
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if open_file:
        console.print(f"[green]‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...[/green]\n")
        try:
            if sys.platform == "win32":
                os.startfile(week_file)
            elif sys.platform == "darwin":
                os.system(f"open {week_file}")
            else:
                os.system(f"xdg-open {week_file}")
        except Exception as e:
            console.print(f"[yellow]‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {e}[/yellow]")
            console.print(f"[dim]–û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: {week_file}[/dim]")
    else:
        console.print(f"[dim]üí° –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: course start-week {week} --open[/dim]\n")


@app.command(name="contract")
def contract(
    action: str = typer.Argument(..., help="–î–µ–π—Å—Ç–≤–∏–µ: init, update, show"),
    week: Optional[int] = typer.Option(None, "--week", "-w", help="–ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ (–¥–ª—è init)"),
    open_file: bool = typer.Option(True, "--open/--no-open", help="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª"),
):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º.
    
    Actions:
    - init: —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–µ–¥–µ–ª–∏ 1)
    - update: –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    - show: –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    """
    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    CONTRACTS_DIR.mkdir(exist_ok=True)
    
    if action == "init":
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø–æ –Ω–µ–¥–µ–ª–µ
        week = week or 1
        
        if week == 1:
            template_name = "Personal_Contract_v1.0_Week1_Template.md"
            version = "v1.0"
        elif week <= 4:
            template_name = "Personal_Contract_v1.0_Week1_Template.md"  # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π
            version = f"v{min(week, 4)}.0"
        else:
            template_name = "Personal_Contract_v4.0_Template.md"
            version = "v4.0"
        
        template_path = TEMPLATES_DIR / template_name
        
        if not template_path.exists():
            console.print(f"[red]‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_name}[/red]")
            console.print(f"[yellow]üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –≤ {TEMPLATES_DIR}[/yellow]")
            raise typer.Exit(code=1)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        timestamp = datetime.now().strftime("%Y%m%d")
        output_name = f"my_contract_week{week}_{timestamp}.md"
        output_path = CONTRACTS_DIR / output_name
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏
        existing = list(CONTRACTS_DIR.glob(f"my_contract_week{week}*.md"))
        if existing:
            console.print(f"[yellow]‚ö†Ô∏è  –ö–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –Ω–µ–¥–µ–ª–∏ {week} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:[/yellow]")
            for f in existing:
                console.print(f"   ‚Ä¢ {f.name}")
            
            overwrite = typer.confirm("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç?")
            if not overwrite:
                console.print("[dim]–û—Ç–º–µ–Ω–µ–Ω–æ[/dim]")
                raise typer.Exit(code=0)
        
        # –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
        try:
            shutil.copy(template_path, output_path)
            console.print(f"\n[green]‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç {version}[/green]")
            console.print(f"[dim]üìÑ {output_path.relative_to(PROJECT_ROOT)}[/dim]\n")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
            if open_file:
                if sys.platform == "win32":
                    os.startfile(output_path)
                elif sys.platform == "darwin":
                    os.system(f"open {output_path}")
                else:
                    os.system(f"xdg-open {output_path}")
        
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: {e}[/red]")
            raise typer.Exit(code=1)
    
    elif action == "show":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
        contracts = sorted(CONTRACTS_DIR.glob("my_contract_*.md"))
        
        if not contracts:
            console.print("[yellow]‚ùå –õ–∏—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã[/yellow]")
            console.print("[dim]üí° –°–æ–∑–¥–∞–π—Ç–µ: course contract init[/dim]")
            raise typer.Exit(code=0)
        
        console.print(f"\n[bold cyan]üìã –í–∞—à–∏ –ª–∏—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã ({len(contracts)}):[/bold cyan]\n")
        
        table = Table(show_header=True)
        table.add_column("–§–∞–π–ª", style="cyan")
        table.add_column("–†–∞–∑–º–µ—Ä", justify="right")
        table.add_column("–ò–∑–º–µ–Ω—ë–Ω", style="dim")
        
        for contract in contracts:
            size = contract.stat().st_size
            size_kb = f"{size // 1024} –ö–ë" if size > 1024 else f"{size} –ë"
            mtime = datetime.fromtimestamp(contract.stat().st_mtime)
            mtime_str = mtime.strftime("%Y-%m-%d %H:%M")
            
            table.add_row(contract.name, size_kb, mtime_str)
        
        console.print(table)
        console.print()
        
    elif action == "update":
        console.print("[yellow]‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ 'update' –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞[/yellow]")
        console.print("[dim]üí° –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –∫–æ–Ω—Ç—Ä–∞–∫—Ç –≤—Ä—É—á–Ω—É—é –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ[/dim]")
    
    else:
        console.print(f"[red]‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}[/red]")
        console.print("[dim]–î–æ—Å—Ç—É–ø–Ω—ã–µ: init, update, show[/dim]")
        raise typer.Exit(code=1)


@app.command(name="progress")
def progress(
    detailed: bool = typer.Option(False, "--detailed", "-d", help="–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å"),
):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫—É—Ä—Å—É.
    
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç:
    - –ö–∞–∫–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
    - –ö–∞–∫–∏–µ –Ω–µ–¥–µ–ª–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
    - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    """
    console.print(f"\n[bold cyan]üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫—É—Ä—Å—É[/bold cyan]\n")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã
    contracts = list(CONTRACTS_DIR.glob("my_contract_*.md"))
    
    if not contracts:
        console.print("[yellow]‚ö†Ô∏è  –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã[/yellow]")
        console.print("[dim]üí° –ù–∞—á–Ω–∏—Ç–µ —Å: course contract init --week 1[/dim]\n")
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–µ–¥–µ–ª–∏ —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏
    weeks_with_contracts = set()
    for contract in contracts:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        import re
        match = re.search(r'week(\d+)', contract.stem)
        if match:
            weeks_with_contracts.add(int(match.group(1)))
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ –Ω–µ–¥–µ–ª—è–º
    table = Table(title="–ù–µ–¥–µ–ª–∏ –∫—É—Ä—Å–∞", show_header=True)
    table.add_column("–ù–µ–¥–µ–ª—è", justify="center", style="cyan")
    table.add_column("–¢–µ–º–∞", style="white")
    table.add_column("–ö–æ–Ω—Ç—Ä–∞–∫—Ç", justify="center")
    table.add_column("–°—Ç–∞—Ç—É—Å", justify="center")
    
    weeks = [
        (1, "–§—É–Ω–¥–∞–º–µ–Ω—Ç"),
        (2, "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"),
        (3, "–¶–µ–Ω–Ω–æ—Å—Ç—å"),
        (4, "–†–∏—Ç–º"),
        (5, "–ö–æ–Ω—Ç–µ–∫—Å—Ç"),
        (6, "–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ"),
        (7, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"),
        (8, "–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"),
    ]
    
    for week_num, week_name in weeks:
        has_contract = "‚úÖ" if week_num in weeks_with_contracts else "‚Äî"
        status = "[green]–í –ø—Ä–æ—Ü–µ—Å—Å–µ[/green]" if week_num in weeks_with_contracts else "[dim]–ù–µ –Ω–∞—á–∞—Ç–∞[/dim]"
        
        table.add_row(str(week_num), week_name, has_contract, status)
    
    console.print(table)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    completed_weeks = len(weeks_with_contracts)
    progress_pct = (completed_weeks / 8) * 100
    
    console.print(f"\n[bold]–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:[/bold]")
    console.print(f"  ‚Ä¢ –ù–µ–¥–µ–ª—å —Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏: {completed_weeks}/8")
    console.print(f"  ‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress_pct:.0f}%")
    console.print(f"  ‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {len(contracts)}")
    console.print()
    
    if detailed:
        console.print(f"[bold]–§–∞–π–ª—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤:[/bold]")
        for contract in sorted(contracts):
            size = contract.stat().st_size // 1024
            console.print(f"  ‚Ä¢ {contract.name} ({size} –ö–ë)")
        console.print()


@app.command(name="template")
def template(
    name: Optional[str] = typer.Argument(None, help="–ò–º—è —à–∞–±–ª–æ–Ω–∞ (–∏–ª–∏ —á–∞—Å—Ç—å –∏–º–µ–Ω–∏)"),
    list_all: bool = typer.Option(False, "--list", "-l", help="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤"),
    output: Optional[str] = typer.Option(None, "--output", "-o", help="–ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"),
):
    """
    –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞.
    
    –ü—Ä–∏–º–µ—Ä—ã:
    - course template Week_08_Energy  # —Å–æ–∑–¥–∞—Å—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞ —ç–Ω–µ—Ä–≥–æ–±—é–¥–∂–µ—Ç–∞
    - course template --list  # –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    """
    if list_all:
        templates = sorted(TEMPLATES_DIR.glob("*.md"))
        
        if not templates:
            console.print(f"[yellow]‚ö†Ô∏è  –®–∞–±–ª–æ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {TEMPLATES_DIR}[/yellow]")
            return
        
        console.print(f"\n[bold cyan]üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã ({len(templates)}):[/bold cyan]\n")
        
        for tmpl in templates:
            console.print(f"  ‚Ä¢ {tmpl.stem}")
        
        console.print()
        console.print("[dim]üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: course template <–∏–º—è>[/dim]")
        return
    
    if not name:
        console.print("[red]‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è —à–∞–±–ª–æ–Ω–∞[/red]")
        console.print("[dim]üí° –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫: course template --list[/dim]")
        raise typer.Exit(code=1)
    
    # –ò—â–µ–º —à–∞–±–ª–æ–Ω –ø–æ –∏–º–µ–Ω–∏
    templates = list(TEMPLATES_DIR.glob(f"*{name}*.md"))
    
    if not templates:
        console.print(f"[red]‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {name}[/red]")
        console.print(f"[dim]üí° –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫: course template --list[/dim]")
        raise typer.Exit(code=1)
    
    if len(templates) > 1:
        console.print(f"[yellow]‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–±–ª–æ–Ω–æ–≤:[/yellow]")
        for tmpl in templates:
            console.print(f"   ‚Ä¢ {tmpl.stem}")
        console.print(f"[dim]üí° –£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å[/dim]")
        raise typer.Exit(code=1)
    
    template_path = templates[0]
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    if output:
        output_path = Path(output)
    else:
        # –°–æ–∑–¥–∞—ë–º –≤ personal_contracts —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π
        CONTRACTS_DIR.mkdir(exist_ok=True)
        timestamp = datetime.now().strftime("%Y%m%d")
        output_path = CONTRACTS_DIR / f"{template_path.stem}_{timestamp}.md"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
    try:
        shutil.copy(template_path, output_path)
        console.print(f"\n[green]‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞[/green]")
        console.print(f"[dim]üìÑ {output_path}[/dim]\n")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
        if sys.platform == "win32":
            os.startfile(output_path)
        elif sys.platform == "darwin":
            os.system(f"open {output_path}")
        else:
            os.system(f"xdg-open {output_path}")
    
    except Exception as e:
        console.print(f"[red]‚ùå –û—à–∏–±–∫–∞: {e}[/red]")
        raise typer.Exit(code=1)


@app.command(name="docs")
def docs(
    action: str = typer.Argument(..., help="–î–µ–π—Å—Ç–≤–∏–µ: check, update"),
    strict: bool = typer.Option(False, "--strict", help="–°—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏"),
    days: int = typer.Option(7, "--days", help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"),
    no_interactive: bool = typer.Option(False, "--no-interactive", help="–ù–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"),
    auto_fix: bool = typer.Option(False, "--auto-fix", help="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Ä—è–¥–∫–æ–º –≤–µ—Ä—Å–∏–π"),
    auto_update: bool = typer.Option(False, "--auto-update", help="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –¥–∞—Ç—É –≤ ASSESSMENT.md"),
):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π –ø—Ä–æ–µ–∫—Ç–∞.
    
    Actions:
    - check: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    - update: –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ
    """
    scripts_dir = PROJECT_ROOT / "scripts"
    
    if action == "check":
        console.print(f"\n[bold cyan]üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏[/bold cyan]\n")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        cmd = [sys.executable, str(scripts_dir / "check_docs_sync.py")]
        
        if strict:
            cmd.append("--strict")
        
        if days != 7:
            cmd.extend(["--days", str(days)])
        
        if auto_fix:
            cmd.append("--auto-fix")
        
        if auto_update:
            cmd.append("--auto-update")
        
        try:
            result = subprocess.run(
                cmd,
                cwd=PROJECT_ROOT,
                capture_output=False,  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                text=True
            )
            
            if result.returncode == 0:
                console.print(f"\n[green]‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞[/green]")
            elif result.returncode == 1:
                console.print(f"\n[yellow]‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è[/yellow]")
                console.print(f"[dim]üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: course docs update[/dim]")
            elif result.returncode == 2:
                console.print(f"\n[red]‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã[/red]")
                console.print(f"[dim]üí° –¢—Ä–µ–±—É–µ—Ç—Å—è: course docs update[/dim]")
            else:
                console.print(f"\n[red]‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (exit code: {result.returncode})[/red]")
            
            return result.returncode
        
        except FileNotFoundError:
            console.print(f"[red]‚ùå –°–∫—Ä–∏–ø—Ç check_docs_sync.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {scripts_dir}[/red]")
            console.print(f"[dim]üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞[/dim]")
            raise typer.Exit(code=1)
        
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}[/red]")
            raise typer.Exit(code=1)
    
    elif action == "update":
        console.print(f"\n[bold cyan]üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏[/bold cyan]\n")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        cmd = [sys.executable, str(scripts_dir / "update_docs.py")]
        
        if days != 7:
            cmd.extend(["--days", str(days)])
        
        if no_interactive:
            cmd.append("--no-interactive")
        
        try:
            result = subprocess.run(
                cmd,
                cwd=PROJECT_ROOT,
                capture_output=False,  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                text=True
            )
            
            if result.returncode == 0:
                console.print(f"\n[green]‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ[/green]")
            else:
                console.print(f"\n[yellow]‚ö†Ô∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏[/yellow]")
            
            return result.returncode
        
        except FileNotFoundError:
            console.print(f"[red]‚ùå –°–∫—Ä–∏–ø—Ç update_docs.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {scripts_dir}[/red]")
            console.print(f"[dim]üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞[/dim]")
            raise typer.Exit(code=1)
        
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}[/red]")
            raise typer.Exit(code=1)
    
    else:
        console.print(f"[red]‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}[/red]")
        console.print(f"[dim]–î–æ—Å—Ç—É–ø–Ω—ã–µ: check, update[/dim]")
        raise typer.Exit(code=1)


@app.command(name="info")
def info():
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö.
    """
    console.print(f"\n[bold cyan]{'='*70}[/bold cyan]")
    console.print(f"[bold cyan]üìö –ö—É—Ä—Å ¬´–°–∏—Å—Ç–µ–º–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞¬ª[/bold cyan]")
    console.print(f"[bold cyan]{'='*70}[/bold cyan]\n")
    
    console.print(f"[bold]–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–∞:[/bold] 8 –Ω–µ–¥–µ–ª—å")
    console.print(f"[bold]–§–æ—Ä–º–∞—Ç:[/bold] –ö–æ–Ω—Ü–µ–ø—Ç + –ü—Ä–∞–∫—Ç–∏–∫–∞ + –õ–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    weeks_count = len(list(WEEKS_DIR.glob("Week_*.md")))
    templates_count = len(list(TEMPLATES_DIR.glob("*.md")))
    
    console.print(f"[bold]–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:[/bold]")
    console.print(f"  ‚Ä¢ –ù–µ–¥–µ–ª—å: {weeks_count}/8")
    console.print(f"  ‚Ä¢ –®–∞–±–ª–æ–Ω–æ–≤: {templates_count}")
    console.print(f"  ‚Ä¢ –ü—Ä–∏–º–µ—Ä–æ–≤: {len(list((PROJECT_ROOT / 'examples').glob('*.md'))) if (PROJECT_ROOT / 'examples').exists() else 0}")
    
    console.print(f"\n[bold]–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:[/bold]")
    console.print(f"  ‚Ä¢ [cyan]course start-week <N>[/cyan] ‚Äî –Ω–∞—á–∞—Ç—å –Ω–µ–¥–µ–ª—é")
    console.print(f"  ‚Ä¢ [cyan]course contract init[/cyan] ‚Äî —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç")
    console.print(f"  ‚Ä¢ [cyan]course progress[/cyan] ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
    console.print(f"  ‚Ä¢ [cyan]course template <name>[/cyan] ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω")
    console.print(f"  ‚Ä¢ [cyan]course docs check[/cyan] ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
    console.print(f"  ‚Ä¢ [cyan]course docs update[/cyan] ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
    
    console.print(f"\n[dim]üí° –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ: course <–∫–æ–º–∞–Ω–¥–∞> --help[/dim]\n")


if __name__ == "__main__":
    app()

